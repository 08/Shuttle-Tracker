# Shuttle Tracker
A suite of applications to make community transportation more useful.

## About
The Shuttle Tracker project lets users view a public or semi-public transportation system's routes and stops, and track the locations of its vehicles.  It also provides estimated times of arrival (ETAs) for each of the stops.  

The project's focus is mobile versions of the [RPI Shuttle Tracker](http://shuttles.rpi.edu/), but can be adapted for use with other systems.

The project's useful products are Android and iOS applications.  They currently display recent shuttle positions, shuttle routes and the stops on these routes.  These applications include the code necessary to display ETAs, but require an additional service to generate ETAs such as the included Java data service.  Examples of the data expected by these applications are available in the `example data/` directory.

The data processor is found in the `server/` directory.  A web server to display the data service's data is in the `webinterface/` directory, and the Android and iOS programs are found in the `android/` and `ios/` directories, respectively.

## License
The Android application, in the 'android/' directory, and the server applications, in the 'server/' directory, are available under the GNU GPLv3 license as specified in the COPYING file.  Files under different licenses will say so in their headers.

The iOS application, in the `ios/` directory, is available under the MIT License.  It also incorporates other projects' code under the MIT License.  The license is specified in the LICENSE file in the `ios/` directory, unless otherwise specified in a file.

Image licenses are detailed in IMAGES_LICENSE.

## Android

### Compiling
Load the project into Eclipse using File->Import...
Add a class called MapsApiKey to the com.abstractedsheep.shuttletracker package.
Add a static String variable to the class called MAPS_API_KEY, set to your Google Maps API key.
(public static final String MAPS_API_KEY = "<YOUR API KEY>";)
Build the project using Project->Build Project (If there are build errors, try Project->Clean...)

### Installing
Use `adb install <apk path>`.
-OR-
Create and use a Run configuration for the project set to launch the default activity with the target set to manual.

## iOS

### Compiling
Use the Xcode project `ios/Shuttle-Tracker.xcodeproj`.

## Data Processor and Web Server

The data processor and web server are discontinued as unfinished, for lack of their developers' time.  The repository's history still has both for the curious.
